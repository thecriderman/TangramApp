<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TangramApp1._35.Controls"
                    xmlns:converters="clr-namespace:TangramApp1._35.Controls.Converters"
                    xmlns:effects="clr-namespace:TangramApp1._35.Effects"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <!--ITERATION 3, lets try this one more time-->
    <!--Coloration is Windows based.-->
    <Style TargetType="{x:Type controls:TouchButtonBase}" x:Key="PieMenuButton">
        <Style.Resources>
            <ResourceDictionary>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToRadius" Scale="1.0"/>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToInnerRadius" Scale="0.1"/>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToThrust" Scale="0.02"/>
                <converters:InverseScaledOffsetIValueConverter x:Key="ChildCountToStartAngle" Scale="-180" Offset="2.5"/>
                <converters:InverseScaledOffsetIValueConverter x:Key="ChildCountToEndAngle" Scale="180" Offset="-2.5"/>

                <LinearGradientBrush x:Key="NormalBackground" StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFF3F3F3" Offset="0" />
                    <GradientStop Color="#FFEBEBEB" Offset="0.5" />
                    <GradientStop Color="#FFDDDDDD" Offset="0.5" />
                    <GradientStop Color="#FFCDCDCD" Offset="1" />
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="HoverBackground" StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFEAF6FD" Offset="0.0"/>
                    <GradientStop Color="#FFD9F0FC" Offset="0.5"/>
                    <GradientStop Color="#FFBEE6FD" Offset="0.5"/>
                    <GradientStop Color="#FFA7D9F5" Offset="1.0"/>
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="PressedBackground" StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#FFC2E4F6" Offset="0.0"/>
                    <GradientStop Color="#FFABDAF3" Offset="0.5"/>
                    <GradientStop Color="#FF90CBEB" Offset="1.0"/>
                </LinearGradientBrush>
            </ResourceDictionary>

        </Style.Resources>

        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Background" Value="{StaticResource ResourceKey=NormalBackground}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.BorderBrush" Value="Gray"/>
        
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TouchButtonBase}">
                    <Grid>
                        <controls:PieSlice
                                            x:Name="BackgroundSlice"
                                            Fill="{TemplateBinding Control.Background}" 
                                            StrokeThickness="{TemplateBinding Control.BorderThickness}" 
                                            Stroke="{TemplateBinding Control.BorderBrush}"
                                            CenterX="0"
                            
                                            RadiusThrust="{TemplateBinding Control.Width, Converter={StaticResource WidthToThrust}}"
                                            InnerRadius="{TemplateBinding Control.Width, Converter={StaticResource WidthToInnerRadius}}"
                                            OuterRadius="{TemplateBinding Control.Width, Converter={StaticResource WidthToRadius}}"
                            
                                            StartAngle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:RadialMenu}}, Path=Children.Count, Converter={StaticResource ChildCountToStartAngle}}"
                                            EndAngle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:RadialMenu}}, Path=Children.Count, Converter={StaticResource ChildCountToEndAngle}}"

                                            Width="{TemplateBinding Control.Width}"
                                            Height="{TemplateBinding Control.Height}">
                        </controls:PieSlice>

                        <ContentPresenter
                                Name="Presenter"
                                RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Margin}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                        </ContentPresenter>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:TouchButtonBase.IsPressed" Value="True">
                            <Setter Property="Control.Background" Value="{StaticResource ResourceKey=PressedBackground}"/>
                        </Trigger>
                        <!--<Trigger Property="ButtonBase.IsMouseOver" Value="True">
                            <Setter Property="ButtonBase.Background" Value="{StaticResource ResourceKey=HoverBackground}"/>
                        </Trigger>-->
                        <Trigger Property="controls:TouchToggleButton.IsChecked" Value="True">
                            <Setter Property="controls:TouchButtonBase.Background" Value="{StaticResource ResourceKey=PressedBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>