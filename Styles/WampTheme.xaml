<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TangramApp1._35.Controls"
                    xmlns:converters="clr-namespace:TangramApp1._35.Controls.Converters">
    
    <!--WAMP theme is a change over from standard BraglTheme-->
    
    <!--WampButton covers Toggle, Press, and Repeat Types-->
    <Style TargetType="{x:Type controls:TouchButtonBase}" x:Key="WampButton">
        <Style.Resources>
            <ResourceDictionary>
                <LinearGradientBrush x:Key="BKG" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#AFE2FF" Offset="0.00"/>
                    <GradientStop Color="#00476F" Offset="0.08"/>
                    <GradientStop Color="#008FDE" Offset="0.50"/>
                    <GradientStop Color="#00476F" Offset="0.92"/>
                    <GradientStop Color="#001B2A" Offset="1.00"/>
                </LinearGradientBrush>
                
                <LinearGradientBrush x:Key="BRDR" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#C6D9F1" Offset="0.0"/>
                    <GradientStop Color="#558ED5" Offset="1.0"/>
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="BKG_PRESSED" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#AFE2FF" Offset="0.00"/>
                    <GradientStop Color="#008FDE" Offset="0.08"/>
                    <GradientStop Color="#008FDE" Offset="0.13"/>
                    <GradientStop Color="#00476F" Offset="0.55"/>
                    <GradientStop Color="#008FDE" Offset="0.92"/>
                    <GradientStop Color="#001B2A" Offset="1.00"/>
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="BKG_CHECKED" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#BBE3B0" Offset="0.00"/>
                    <GradientStop Color="#00E022" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.13"/>
                    <GradientStop Color="#007013" Offset="0.55"/>
                    <GradientStop Color="#00E022" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </LinearGradientBrush>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <!--when focused-->
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                        <!--Also empty for now-->
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <!--The highlight around a button when it is tabbed to-->
                                <Rectangle Stroke="#B9CDE5" StrokeThickness="1" StrokeDashArray="2 2" Margin="2,2,2,2" RadiusX="5" RadiusY="5" SnapsToDevicePixels="True"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource BKG}"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource BRDR}"/>
        <Setter Property="TextElement.Foreground" Value="#FFFFFF"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}"/>
        <Setter Property="Control.Padding" Value="1,1,1,1"/>

        <!--And now for the template-->
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TouchButtonBase}">
                    <Border BorderThickness="{TemplateBinding Button.BorderThickness}" CornerRadius="5,5,5,5" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" SnapsToDevicePixels="True" Name="ButtonBorder">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Border>
                    
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="ButtonBorder" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Black"/>
                        </Trigger>
                        <Trigger Property="controls:TouchButtonBase.IsPressed" Value="True">
                            <!--<Setter  TargetName="ButtonContentPresenter" Property="Margin" Value="0,3,0,0"/>-->
                            <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource BKG_PRESSED}"/>
                        </Trigger>
                        
                        <!--TOGGLE BUTTON CRAP-->
                        <Trigger Property="controls:TouchToggleButton.IsChecked" Value="True">
                            <Setter Property="Panel.Background" Value="{StaticResource BKG_CHECKED}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--WampButtonGreen-->
    <Style TargetType="{x:Type controls:TouchButtonBase}" x:Key="WampButtonGreen">
        <Style.Resources>
            <ResourceDictionary>
                <LinearGradientBrush x:Key="BKG" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#BBE3B0" Offset="0.00"/>
                    <GradientStop Color="#007013" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.50"/>
                    <GradientStop Color="#007013" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="BRDR" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#C6D9F1" Offset="0.0"/>
                    <GradientStop Color="#558ED5" Offset="1.0"/>
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="BKG_PRESSED" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#BBE3B0" Offset="0.00"/>
                    <GradientStop Color="#00E022" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.13"/>
                    <GradientStop Color="#007013" Offset="0.55"/>
                    <GradientStop Color="#00E022" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </LinearGradientBrush>

                <LinearGradientBrush x:Key="BKG_CHECKED" StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="#BBE3B0" Offset="0.00"/>
                    <GradientStop Color="#00E022" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.13"/>
                    <GradientStop Color="#007013" Offset="0.55"/>
                    <GradientStop Color="#00E022" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </LinearGradientBrush>
            </ResourceDictionary>
        </Style.Resources>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <!--when focused-->
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Style.Resources>
                        <ResourceDictionary />
                        <!--Also empty for now-->
                    </Style.Resources>
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <!--The highlight around a button when it is tabbed to-->
                                <Rectangle Stroke="#B9CDE5" StrokeThickness="1" StrokeDashArray="2 2" Margin="2,2,2,2" RadiusX="5" RadiusY="5" SnapsToDevicePixels="True"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background" Value="{StaticResource BKG}"/>
        <Setter Property="Border.BorderBrush" Value="{StaticResource BRDR}"/>
        <Setter Property="TextElement.Foreground" Value="#FFFFFF"/>
        <Setter Property="TextElement.FontSize" Value="14"/>
        <Setter Property="TextElement.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.VerticalContentAlignment" Value="{x:Static VerticalAlignment.Center}"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="{x:Static HorizontalAlignment.Center}"/>
        <Setter Property="Control.Padding" Value="1,1,1,1"/>

        <!--And now for the template-->
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TouchButtonBase}">
                    <Border BorderThickness="{TemplateBinding Button.BorderThickness}" CornerRadius="5,5,5,5" Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" SnapsToDevicePixels="True" Name="ButtonBorder">
                        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="ButtonBorder" Value="Gray"/>
                            <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Black"/>
                        </Trigger>
                        <Trigger Property="controls:TouchButtonBase.IsPressed" Value="True">
                            <!--<Setter  TargetName="ButtonContentPresenter" Property="Margin" Value="0,3,0,0"/>-->
                            <Setter Property="Background" TargetName="ButtonBorder" Value="{StaticResource BKG_PRESSED}"/>
                        </Trigger>

                        <!--TOGGLE BUTTON CRAP-->
                        <Trigger Property="controls:TouchToggleButton.IsChecked" Value="True">
                            <Setter Property="Panel.Background" Value="{StaticResource BKG_CHECKED}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--WampPieMenuButton-->
    <Style TargetType="{x:Type controls:TouchButtonBase}" x:Key="WampPieMenuButton">
        <Style.Resources>
            <ResourceDictionary>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToRadius" Scale="1.0"/>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToInnerRadius" Scale="0.1"/>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToThrust" Scale="0.02"/>
                <converters:InverseScaledOffsetIValueConverter x:Key="ChildCountToStartAngle" Scale="-180" Offset="2.5"/>
                <converters:InverseScaledOffsetIValueConverter x:Key="ChildCountToEndAngle" Scale="180" Offset="-2.5"/>

                <RadialGradientBrush x:Key="NormalBackground" Center="0.5,0.5" GradientOrigin="0.0,0.5" RadiusX="1" RadiusY="0.8">
                    <!--<GradientStop Color="#AFE2FF" Offset="0.00"/>-->
                    <GradientStop Color="#00476F" Offset="0.08"/>
                    <GradientStop Color="#008FDE" Offset="0.50"/>
                    <GradientStop Color="#00476F" Offset="0.92"/>
                    <GradientStop Color="#001B2A" Offset="1.00"/>
                </RadialGradientBrush>

                <RadialGradientBrush x:Key="PressedBackground" Center="0.5,0.5" GradientOrigin="0.0,0.5" RadiusX="1" RadiusY="0.8">
                    <!--<GradientStop Color="#AFE2FF" Offset="0.00"/>-->
                    <GradientStop Color="#008FDE" Offset="0.08"/>
                    <GradientStop Color="#008FDE" Offset="0.13"/>
                    <GradientStop Color="#00476F" Offset="0.55"/>
                    <GradientStop Color="#008FDE" Offset="0.92"/>
                    <GradientStop Color="#001B2A" Offset="1.00"/>
                 </RadialGradientBrush>

                <RadialGradientBrush x:Key="CheckedBackground" Center="0.5,0.5" GradientOrigin="0.0,0.5" RadiusX="1" RadiusY="0.8">
                    <!--<GradientStop Color="#BBE3B0" Offset="0.00"/>-->
                    <GradientStop Color="#00E022" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.13"/>
                    <GradientStop Color="#007013" Offset="0.55"/>
                    <GradientStop Color="#00E022" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </RadialGradientBrush>
            </ResourceDictionary>

        </Style.Resources>

        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Background" Value="{StaticResource NormalBackground}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.BorderBrush" Value="#001B2A"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TouchButtonBase}">
                    <Grid>
                        <controls:PieSlice
                                            x:Name="BackgroundSlice"
                                            Fill="{TemplateBinding Control.Background}" 
                                            StrokeThickness="{TemplateBinding Control.BorderThickness}" 
                                            Stroke="{TemplateBinding Control.BorderBrush}"
                                            CenterX="0"
                            
                                            RadiusThrust="{TemplateBinding Control.Width, Converter={StaticResource WidthToThrust}}"
                                            InnerRadius="{TemplateBinding Control.Width, Converter={StaticResource WidthToInnerRadius}}"
                                            OuterRadius="{TemplateBinding Control.Width, Converter={StaticResource WidthToRadius}}"
                            
                                            StartAngle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:RadialMenu}}, Path=Children.Count, Converter={StaticResource ChildCountToStartAngle}}"
                                            EndAngle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:RadialMenu}}, Path=Children.Count, Converter={StaticResource ChildCountToEndAngle}}"

                                            Width="{TemplateBinding Control.Width}"
                                            Height="{TemplateBinding Control.Height}">
                        </controls:PieSlice>

                        <ContentPresenter
                                Name="Presenter"
                                RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Margin}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                        </ContentPresenter>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:TouchButtonBase.IsPressed" Value="True">
                            <Setter Property="Control.Background" Value="{StaticResource ResourceKey=PressedBackground}"/>
                        </Trigger>
                        <!--<Trigger Property="ButtonBase.IsMouseOver" Value="True">
                            <Setter Property="ButtonBase.Background" Value="{StaticResource ResourceKey=HoverBackground}"/>
                        </Trigger>-->
                        <Trigger Property="controls:TouchToggleButton.IsChecked" Value="True">
                            <Setter Property="controls:TouchButtonBase.Background" Value="{StaticResource ResourceKey=CheckedBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--WampPieMenuButtonGreen-->
    <Style TargetType="{x:Type controls:TouchButtonBase}" x:Key="WampPieMenuButtonGreen">
        <Style.Resources>
            <ResourceDictionary>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToRadius" Scale="1.0"/>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToInnerRadius" Scale="0.1"/>
                <converters:ScaledOffsetIValueConverter x:Key="WidthToThrust" Scale="0.02"/>
                <converters:InverseScaledOffsetIValueConverter x:Key="ChildCountToStartAngle" Scale="-180" Offset="2.5"/>
                <converters:InverseScaledOffsetIValueConverter x:Key="ChildCountToEndAngle" Scale="180" Offset="-2.5"/>

                <RadialGradientBrush x:Key="NormalBackground" Center="0.5,0.5" GradientOrigin="0.0,0.5" RadiusX="1" RadiusY="0.8">
                    <!--<GradientStop Color="#BBE3B0" Offset="0.00"/>-->
                    <GradientStop Color="#007013" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.50"/>
                    <GradientStop Color="#007013" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </RadialGradientBrush>

                <RadialGradientBrush x:Key="PressedBackground" Center="0.5,0.5" GradientOrigin="0.0,0.5" RadiusX="1" RadiusY="0.8">
                    <!--<GradientStop Color="#BBE3B0" Offset="0.00"/>-->
                    <GradientStop Color="#00E022" Offset="0.08"/>
                    <GradientStop Color="#00E022" Offset="0.13"/>
                    <GradientStop Color="#007013" Offset="0.55"/>
                    <GradientStop Color="#00E022" Offset="0.92"/>
                    <GradientStop Color="#002A07" Offset="1.00"/>
                </RadialGradientBrush>
            </ResourceDictionary>

        </Style.Resources>

        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Background" Value="{StaticResource NormalBackground}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.BorderBrush" Value="#002A07"/>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TouchButtonBase}">
                    <Grid>
                        <controls:PieSlice
                                            x:Name="BackgroundSlice"
                                            Fill="{TemplateBinding Control.Background}" 
                                            StrokeThickness="{TemplateBinding Control.BorderThickness}" 
                                            Stroke="{TemplateBinding Control.BorderBrush}"
                                            CenterX="0"
                            
                                            RadiusThrust="{TemplateBinding Control.Width, Converter={StaticResource WidthToThrust}}"
                                            InnerRadius="{TemplateBinding Control.Width, Converter={StaticResource WidthToInnerRadius}}"
                                            OuterRadius="{TemplateBinding Control.Width, Converter={StaticResource WidthToRadius}}"
                            
                                            StartAngle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:RadialMenu}}, Path=Children.Count, Converter={StaticResource ChildCountToStartAngle}}"
                                            EndAngle="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:RadialMenu}}, Path=Children.Count, Converter={StaticResource ChildCountToEndAngle}}"

                                            Width="{TemplateBinding Control.Width}"
                                            Height="{TemplateBinding Control.Height}">
                        </controls:PieSlice>

                        <ContentPresenter
                                Name="Presenter"
                                RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="{TemplateBinding Control.Margin}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                        </ContentPresenter>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="controls:TouchButtonBase.IsPressed" Value="True">
                            <Setter Property="Control.Background" Value="{StaticResource ResourceKey=PressedBackground}"/>
                        </Trigger>
                        <!--<Trigger Property="ButtonBase.IsMouseOver" Value="True">
                            <Setter Property="ButtonBase.Background" Value="{StaticResource ResourceKey=HoverBackground}"/>
                        </Trigger>-->
                        <Trigger Property="controls:TouchToggleButton.IsChecked" Value="True">
                            <Setter Property="controls:TouchButtonBase.Background" Value="{StaticResource ResourceKey=PressedBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>